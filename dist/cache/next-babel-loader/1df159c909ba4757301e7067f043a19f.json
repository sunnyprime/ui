{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/brickbolt/React/bricknbolt/updated/foundation-react-ui/src/js/common/containers/ReducerInjectorHOC.jsx\";\nvar __jsx = React.createElement;\n\n/* eslint-disable react/jsx-props-no-spreading */\n\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n\n/*\nthis file is always supposed to be a .jsx file converting it to .tsx will break reducer injection!  -pranjalk 2019-12-23\n*/\nimport React from 'react';\nimport { ReactReduxContext } from 'react-redux';\n\nconst ReducerInjectorHOC = (key, reducer) => WrappedComponent => {\n  const ReducerInjector = props => __jsx(ReactReduxContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, ({\n    store\n  }) => {\n    store.injectReducer(key, reducer);\n    return __jsx(WrappedComponent, _extends({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }));\n  });\n\n  ReducerInjector.displayName = `ReducerInjected${key}`;\n  return ReducerInjector;\n};\n\nexport default ReducerInjectorHOC;","map":{"version":3,"sources":["/Users/brickbolt/React/bricknbolt/updated/foundation-react-ui/src/js/common/containers/ReducerInjectorHOC.jsx"],"names":["React","ReactReduxContext","ReducerInjectorHOC","key","reducer","WrappedComponent","ReducerInjector","props","store","injectReducer","displayName"],"mappings":";;;;AAAA;;AACA;;AACA;;;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,aAAlC;;AAEA,MAAMC,kBAAkB,GAAG,CAACC,GAAD,EAAMC,OAAN,KAAmBC,gBAAD,IAAsB;AAC/D,QAAMC,eAAe,GAAIC,KAAD,IACpB,MAAC,iBAAD,CAAmB,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAe;AACZA,IAAAA,KAAK,CAACC,aAAN,CAAoBN,GAApB,EAAyBC,OAAzB;AACA,WACI,MAAC,gBAAD,eAAsBG,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ;AAGH,GANL,CADJ;;AAUAD,EAAAA,eAAe,CAACI,WAAhB,GAA+B,kBAAiBP,GAAI,EAApD;AAEA,SAAOG,eAAP;AACH,CAdD;;AAiBA,eAAeJ,kBAAf","sourcesContent":["/* eslint-disable react/jsx-props-no-spreading */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n/*\nthis file is always supposed to be a .jsx file converting it to .tsx will break reducer injection!  -pranjalk 2019-12-23\n*/\nimport React from 'react';\nimport { ReactReduxContext } from 'react-redux';\n\nconst ReducerInjectorHOC = (key, reducer) => (WrappedComponent) => {\n    const ReducerInjector = (props) => (\n        <ReactReduxContext.Consumer>\n            {({ store }) => {\n                store.injectReducer(key, reducer);\n                return (\n                    <WrappedComponent {...props} />\n                );\n            }}\n        </ReactReduxContext.Consumer>\n    );\n    ReducerInjector.displayName = `ReducerInjected${key}`;\n\n    return ReducerInjector;\n};\n\n\nexport default ReducerInjectorHOC;\n"]},"metadata":{},"sourceType":"module"}