{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/brickbolt/React/bricknbolt/updated/foundation-react-ui/src/js/desktop/pages/call/index.tsx\";\nvar __jsx = React.createElement;\n\n/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport Form from 'antd/lib/form';\nimport { Input, Button, notification, DatePicker } from 'antd';\nimport Headers from '../component/headers';\nimport '../component/header.scss';\nimport api from '../../../common/utils/apiClient';\nimport { HTTP_OK } from '../../../common/constants/httpStatusCodes';\nvar formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 6\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 14\n    }\n  }\n};\nvar tailWrapperLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 24\n    }\n  }\n};\n\nvar CallForm = function CallForm(props) {\n  var onSubmit = props.onSubmit,\n      _props$form = props.form,\n      getFieldDecorator = _props$form.getFieldDecorator,\n      validateFieldsAndScroll = _props$form.validateFieldsAndScroll;\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    validateFieldsAndScroll(function (err, values) {\n      if (!err) {\n        // console.log('Received values of form: ', values);\n        // console.log(values.scheduleDate._d);\n        var data = {\n          name: values.name,\n          phone: values.phone,\n          email: values.email,\n          scheduleDate: values.scheduleDate._d,\n          scheduleType: 'callback'\n        };\n\n        var payload = _JSON$stringify(data); // console.log(payload);\n\n\n        api.post('https://crm.bricknbolt.com/schedule', {}, payload).then(function (response) {\n          if (response.status === HTTP_OK) {\n            notification.success({\n              message: 'Your concern/query is successfully registered with us, Our Project Manager will get in touch with you.'\n            });\n          } else {\n            notification.error({\n              message: 'Unable to create contract, try after sometime'\n            });\n          }\n        });\n        onSubmit();\n      }\n    });\n  };\n\n  var config = {\n    rules: [{\n      type: 'object',\n      required: true,\n      message: 'Please select time!'\n    }]\n  };\n  return __jsx(React.Fragment, null, __jsx(Headers, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), __jsx(\"div\", {\n    className: \"CallnMeeting\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, __jsx(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Comfortable date and time to call you back\"), __jsx(Form, _extends({}, formItemLayout, {\n    onSubmit: handleSubmit,\n    className: \"Form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), __jsx(Form.Item, {\n    label: \"Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, getFieldDecorator('name', {\n    rules: [{\n      required: true,\n      message: 'Required'\n    }]\n  })(__jsx(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }))), __jsx(Form.Item, {\n    label: \"Phone\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, getFieldDecorator('phone', {\n    rules: [{\n      required: true,\n      message: 'Required'\n    }]\n  })(__jsx(Input, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }))), __jsx(Form.Item, {\n    label: \"Email:\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, getFieldDecorator('Email', {\n    rules: [{\n      required: false,\n      message: 'Required'\n    }]\n  })(__jsx(Input, {\n    type: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }))), __jsx(Form.Item, {\n    label: \"Calender\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, getFieldDecorator('date-time-picker', config)(__jsx(DatePicker, {\n    showTime: true,\n    format: \"YYYY-MM-DD HH:mm:ss\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }))), __jsx(Form.Item, _extends({}, tailWrapperLayout, {\n    style: {\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }), __jsx(Button, {\n    type: \"danger\",\n    htmlType: \"submit\",\n    className: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Submit\")))));\n};\n\nexport default Form.create({\n  name: 'Call-form'\n})(CallForm);","map":{"version":3,"sources":["/Users/brickbolt/React/bricknbolt/updated/foundation-react-ui/src/js/desktop/pages/call/index.tsx"],"names":["React","Form","Input","Button","notification","DatePicker","Headers","api","HTTP_OK","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailWrapperLayout","CallForm","props","onSubmit","form","getFieldDecorator","validateFieldsAndScroll","handleSubmit","e","preventDefault","err","values","data","name","phone","email","scheduleDate","_d","scheduleType","payload","post","then","response","status","success","message","error","config","rules","type","required","textAlign","create"],"mappings":"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","sourcesContent":["/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react';\nimport Form, { FormComponentProps } from 'antd/lib/form';\nimport {\n    Input, Button, notification, DatePicker,\n} from 'antd';\nimport { AxiosResponse } from 'axios';\nimport Headers from '../component/headers';\nimport '../component/header.scss';\nimport api from '../../../common/utils/apiClient';\nimport { HTTP_OK } from '../../../common/constants/httpStatusCodes';\n\ninterface Props extends FormComponentProps {\n    projectId: string;\n    crnId: string;\n    onSubmit(): void;\n}\n\nconst formItemLayout = {\n    labelCol: {\n        xs: { span: 24 },\n        sm: { span: 6 },\n    },\n    wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 14 },\n    },\n};\n\nconst tailWrapperLayout = {\n    wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 24 },\n    },\n};\n\nconst CallForm = (props: Props): JSX.Element => {\n    const {\n        onSubmit, form: { getFieldDecorator, validateFieldsAndScroll },\n    } = props;\n\n    const handleSubmit = (e): void => {\n        e.preventDefault();\n        validateFieldsAndScroll((err, values) => {\n            if (!err) {\n                // console.log('Received values of form: ', values);\n                // console.log(values.scheduleDate._d);\n\n                const data = {\n                    name: values.name,\n                    phone: values.phone,\n                    email: values.email,\n                    scheduleDate: values.scheduleDate._d,\n                    scheduleType: 'callback',\n                };\n                const payload = JSON.stringify(data);\n                // console.log(payload);\n                api.post('https://crm.bricknbolt.com/schedule', {}, payload).then((response: AxiosResponse) => {\n                    if (response.status === HTTP_OK) {\n                        notification.success({\n                            message: 'Your concern/query is successfully registered with us, Our Project Manager will get in touch with you.',\n                        });\n                    } else {\n                        notification.error({\n                            message: 'Unable to create contract, try after sometime',\n                        });\n                    }\n                });\n                onSubmit();\n            }\n        });\n    };\n    const config = {\n        rules: [{ type: 'object', required: true, message: 'Please select time!' }],\n    };\n\n    return (\n        <>\n            <Headers />\n            <div className=\"CallnMeeting\">\n\n                <h2>Comfortable date and time to call you back</h2>\n\n                <Form {...formItemLayout} onSubmit={handleSubmit} className=\"Form\">\n\n                    <Form.Item label=\"Name\">\n                        {getFieldDecorator('name', {\n                            rules: [{ required: true, message: 'Required' }],\n                        })(\n                            <Input />,\n                        )}\n                    </Form.Item>\n                    <Form.Item label=\"Phone\">\n                        {getFieldDecorator('phone', {\n                            rules: [{ required: true, message: 'Required' }],\n                        })(\n                            <Input />,\n                        )}\n                    </Form.Item>\n                    <Form.Item label=\"Email:\">\n                        {getFieldDecorator('Email', {\n                            rules: [{ required: false, message: 'Required' }],\n                        })(\n                            <Input type=\"email\" />,\n                        )}\n                    </Form.Item>\n                    <Form.Item label=\"Calender\">\n                        {getFieldDecorator('date-time-picker', config)(\n                            <DatePicker showTime format=\"YYYY-MM-DD HH:mm:ss\" />,\n                        )}\n                    </Form.Item>\n\n\n                    <Form.Item {...tailWrapperLayout} style={{ textAlign: 'center' }}>\n                        <Button type=\"danger\" htmlType=\"submit\" className=\"button\">Submit</Button>\n                    </Form.Item>\n                </Form>\n            </div>\n        </>\n    );\n};\n\nexport default Form.create<Props>({ name: 'Call-form' })(CallForm);\n"]},"metadata":{},"sourceType":"module"}