{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/* eslint-disable import/no-cycle */\nimport camelCase from 'lodash/camelCase';\nimport iterateArrayToCamelCase from './iterateArrayToCamelCase';\n\nvar iterateObjectToCamelCase = function iterateObjectToCamelCase(input) {\n  if (input.constructor === Object) {\n    var newObj = {};\n\n    _Object$keys(input).forEach(function (key) {\n      if (input[key] !== null) {\n        if (input[key].constructor === Array) {\n          newObj[camelCase(key)] = iterateArrayToCamelCase(input[key]);\n        } else if (input[key].constructor === Object) {\n          newObj[camelCase(key)] = iterateObjectToCamelCase(input[key]);\n        } else {\n          newObj[camelCase(key)] = input[key];\n        }\n      } else {\n        newObj[camelCase(key)] = input[key];\n      }\n    });\n\n    return newObj;\n  }\n\n  return input;\n};\n\nexport default iterateObjectToCamelCase;","map":{"version":3,"sources":["/Users/brickbolt/React/bricknbolt/updated/foundation-react-ui/src/js/common/utils/iterateObjectToCamelCase.ts"],"names":["camelCase","iterateArrayToCamelCase","iterateObjectToCamelCase","input","constructor","Object","newObj","forEach","key","Array"],"mappings":";;AAAA;;AACA;AAEA,OAAOA,SAAP,MAAsB,kBAAtB;AACA,OAAOC,uBAAP,MAAoC,2BAApC;;AAEA,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACC,KAAD,EAAqB;AAClD,MAAIA,KAAK,CAACC,WAAN,KAAsBC,MAA1B,EAAkC;AAC9B,QAAMC,MAAM,GAAG,EAAf;;AACA,iBAAYH,KAAZ,EAAmBI,OAAnB,CAA2B,UAACC,GAAD,EAAS;AAChC,UAAIL,KAAK,CAACK,GAAD,CAAL,KAAe,IAAnB,EAAyB;AACrB,YAAIL,KAAK,CAACK,GAAD,CAAL,CAAWJ,WAAX,KAA2BK,KAA/B,EAAsC;AAClCH,UAAAA,MAAM,CAACN,SAAS,CAACQ,GAAD,CAAV,CAAN,GAAyBP,uBAAuB,CAACE,KAAK,CAACK,GAAD,CAAN,CAAhD;AACH,SAFD,MAEO,IAAIL,KAAK,CAACK,GAAD,CAAL,CAAWJ,WAAX,KAA2BC,MAA/B,EAAuC;AAC1CC,UAAAA,MAAM,CAACN,SAAS,CAACQ,GAAD,CAAV,CAAN,GAAyBN,wBAAwB,CAACC,KAAK,CAACK,GAAD,CAAN,CAAjD;AACH,SAFM,MAEA;AACHF,UAAAA,MAAM,CAACN,SAAS,CAACQ,GAAD,CAAV,CAAN,GAAyBL,KAAK,CAACK,GAAD,CAA9B;AACH;AACJ,OARD,MAQO;AACHF,QAAAA,MAAM,CAACN,SAAS,CAACQ,GAAD,CAAV,CAAN,GAAyBL,KAAK,CAACK,GAAD,CAA9B;AACH;AACJ,KAZD;;AAaA,WAAOF,MAAP;AACH;;AACD,SAAOH,KAAP;AACH,CAnBD;;AAqBA,eAAeD,wBAAf","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable import/no-cycle */\n\nimport camelCase from 'lodash/camelCase';\nimport iterateArrayToCamelCase from './iterateArrayToCamelCase';\n\nconst iterateObjectToCamelCase = (input: any): any => {\n    if (input.constructor === Object) {\n        const newObj = {};\n        Object.keys(input).forEach((key) => {\n            if (input[key] !== null) {\n                if (input[key].constructor === Array) {\n                    newObj[camelCase(key)] = iterateArrayToCamelCase(input[key]);\n                } else if (input[key].constructor === Object) {\n                    newObj[camelCase(key)] = iterateObjectToCamelCase(input[key]);\n                } else {\n                    newObj[camelCase(key)] = input[key];\n                }\n            } else {\n                newObj[camelCase(key)] = input[key];\n            }\n        });\n        return newObj;\n    }\n    return input;\n};\n\nexport default iterateObjectToCamelCase;\n"]},"metadata":{},"sourceType":"module"}