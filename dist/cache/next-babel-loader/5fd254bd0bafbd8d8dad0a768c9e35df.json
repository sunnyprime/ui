{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n\n/*\nthis file is always supposed to be a .js file converting it to .ts will break reducer injection!  -pranjalk 2019-12-27\n*/\nimport { compose, createStore, applyMiddleware, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport apiMiddleware from './middlewares/apiPromiseHandler';\nimport initReducers from './reducers/rootReducer';\nvar middlewares = [thunk, apiMiddleware];\n\nfunction createReducer(asyncReducers) {\n  return combineReducers(_objectSpread({}, initReducers, {}, asyncReducers));\n}\n\nvar appStore = function appStore(initialState, _ref) {\n  var _ref$devTools = _ref.devTools,\n      devTools = _ref$devTools === void 0 ? function (x) {\n    return x;\n  } : _ref$devTools,\n      _ref$extraMiddlewares = _ref.extraMiddlewares,\n      extraMiddlewares = _ref$extraMiddlewares === void 0 ? [] : _ref$extraMiddlewares;\n  var bootupReducer = createReducer({});\n  var store = createStore(bootupReducer, initialState, compose(applyMiddleware.apply(void 0, middlewares.concat(_toConsumableArray(extraMiddlewares))), devTools));\n  store.asyncReducers = {};\n\n  store.injectReducer = function (key, asyncReducer) {\n    store.asyncReducers[key] = asyncReducer;\n    store.replaceReducer(createReducer(store.asyncReducers)); // eslint-disable-next-line no-console\n\n    console.log(\"\".concat(key, \" reducer injected successfully\"));\n  };\n\n  return store;\n};\n\nexport default appStore;","map":{"version":3,"sources":["/Users/brickbolt/React/bricknbolt/updated/foundation-react-ui/src/js/redux/initAppStore.js"],"names":["compose","createStore","applyMiddleware","combineReducers","thunk","apiMiddleware","initReducers","middlewares","createReducer","asyncReducers","appStore","initialState","devTools","x","extraMiddlewares","bootupReducer","store","injectReducer","key","asyncReducer","replaceReducer","console","log"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AAEA;;;AAIA,SACIA,OADJ,EAEIC,WAFJ,EAGIC,eAHJ,EAIIC,eAJJ,QAKO,OALP;AAMA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AAEA,IAAMC,WAAW,GAAG,CAChBH,KADgB,EAEhBC,aAFgB,CAApB;;AAKA,SAASG,aAAT,CAAuBC,aAAvB,EAAsC;AAClC,SAAON,eAAe,mBACfG,YADe,MAEfG,aAFe,EAAtB;AAIH;;AAED,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,YAAD,QAAkE;AAAA,2BAAjDC,QAAiD;AAAA,MAAjDA,QAAiD,8BAAtC,UAACC,CAAD;AAAA,WAAOA,CAAP;AAAA,GAAsC;AAAA,mCAA5BC,gBAA4B;AAAA,MAA5BA,gBAA4B,sCAAT,EAAS;AAC/E,MAAMC,aAAa,GAAGP,aAAa,CAAC,EAAD,CAAnC;AACA,MAAMQ,KAAK,GAAGf,WAAW,CACrBc,aADqB,EAErBJ,YAFqB,EAEPX,OAAO,CACjBE,eAAe,MAAf,SACOK,WADP,2BAEOO,gBAFP,GADiB,EAKjBF,QALiB,CAFA,CAAzB;AAWAI,EAAAA,KAAK,CAACP,aAAN,GAAsB,EAAtB;;AACAO,EAAAA,KAAK,CAACC,aAAN,GAAsB,UAACC,GAAD,EAAMC,YAAN,EAAuB;AACzCH,IAAAA,KAAK,CAACP,aAAN,CAAoBS,GAApB,IAA2BC,YAA3B;AACAH,IAAAA,KAAK,CAACI,cAAN,CAAqBZ,aAAa,CAACQ,KAAK,CAACP,aAAP,CAAlC,EAFyC,CAGzC;;AACAY,IAAAA,OAAO,CAACC,GAAR,WAAeJ,GAAf;AACH,GALD;;AAOA,SAAOF,KAAP;AACH,CAtBD;;AAwBA,eAAeN,QAAf","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-function-return-type */\n\n/*\nthis file is always supposed to be a .js file converting it to .ts will break reducer injection!  -pranjalk 2019-12-27\n*/\n\nimport {\n    compose,\n    createStore,\n    applyMiddleware,\n    combineReducers,\n} from 'redux';\nimport thunk from 'redux-thunk';\nimport apiMiddleware from './middlewares/apiPromiseHandler';\nimport initReducers from './reducers/rootReducer';\n\nconst middlewares = [\n    thunk,\n    apiMiddleware,\n];\n\nfunction createReducer(asyncReducers) {\n    return combineReducers({\n        ...initReducers,\n        ...asyncReducers,\n    });\n}\n\nconst appStore = (initialState, { devTools = (x) => x, extraMiddlewares = [] }) => {\n    const bootupReducer = createReducer({});\n    const store = createStore(\n        bootupReducer,\n        initialState, compose(\n            applyMiddleware(\n                ...middlewares,\n                ...extraMiddlewares,\n            ),\n            devTools,\n        ),\n    );\n\n    store.asyncReducers = {};\n    store.injectReducer = (key, asyncReducer) => {\n        store.asyncReducers[key] = asyncReducer;\n        store.replaceReducer(createReducer(store.asyncReducers));\n        // eslint-disable-next-line no-console\n        console.log(`${key} reducer injected successfully`);\n    };\n\n    return store;\n};\n\nexport default appStore;\n"]},"metadata":{},"sourceType":"module"}