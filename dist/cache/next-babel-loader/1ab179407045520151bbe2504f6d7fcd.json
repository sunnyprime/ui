{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport axios from 'axios';\nimport Debug from 'debug';\nimport { getHostName, isServer } from './server';\nimport config from '../../../../config/config'; // eslint-disable-next-line no-underscore-dangle\n\nconst debug = Debug('fr-ui:api');\nconst GET = 'get';\nconst POST = 'post';\nconst DELETE = 'delete';\nconst PUT = 'put';\nexport function apiClient(apiLib) {\n  const defaultOptions = {\n    method: GET,\n    url: '',\n    params: {},\n    data: null\n  };\n  return useCustom => apiEndpoint => ({\n    get(url, params = {}) {\n      const urlEndpoint = useCustom ? apiEndpoint : apiEndpoint();\n      const absoluteUrl = urlEndpoint + url;\n      debug('GET request to url: ', absoluteUrl);\n      return apiLib(_objectSpread({}, defaultOptions, {\n        method: GET,\n        url: absoluteUrl,\n        params,\n        headers: {// any custom headers go here\n        }\n      }));\n    },\n\n    delete(url, params = {}) {\n      const urlEndpoint = useCustom ? apiEndpoint : apiEndpoint();\n      const absoluteUrl = urlEndpoint + url;\n      debug('DELETE request to url: ', absoluteUrl);\n      return apiLib(_objectSpread({}, defaultOptions, {\n        method: DELETE,\n        url: absoluteUrl,\n        params,\n        headers: {// any custom headers go here\n        },\n        xsrfCookieName: 'add csrf cookie name here',\n        xsrfHeaderName: 'add csrf header name'\n      }));\n    },\n\n    put(url, params = {}, data = {}) {\n      const urlEndpoint = useCustom ? apiEndpoint : apiEndpoint();\n      const absoluteUrl = urlEndpoint + url;\n      return apiLib(_objectSpread({}, defaultOptions, {\n        method: PUT,\n        url: absoluteUrl,\n        params,\n        data,\n        headers: {// any custom headers go here\n        },\n        xsrfCookieName: 'add csrf cookie name here',\n        xsrfHeaderName: 'add csrf header name'\n      }));\n    },\n\n    post(url, params = {}, data = {}) {\n      const urlEndpoint = useCustom ? apiEndpoint : apiEndpoint();\n      const absoluteUrl = urlEndpoint + url;\n      debug('POST request to url:', absoluteUrl);\n      return apiLib(_objectSpread({}, defaultOptions, {\n        method: POST,\n        url: absoluteUrl,\n        params,\n        data,\n        headers: {// any custom headers go here\n        },\n        xsrfCookieName: 'add csrf cookie name here',\n        xsrfHeaderName: 'add csrf header name'\n      }));\n    },\n\n    multiPart(url, params = {}, data = {}) {\n      const urlEndpoint = useCustom ? apiEndpoint : apiEndpoint();\n      const absoluteUrl = urlEndpoint + url;\n      debug('Attempting multi-part request to url:', absoluteUrl);\n      return apiLib(_objectSpread({}, defaultOptions, {\n        method: POST,\n        url: absoluteUrl,\n        params,\n        data,\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        xsrfCookieName: 'add csrf cookie name here',\n        xsrfHeaderName: 'add csrf header name'\n      }));\n    },\n\n    blob(url, params = {}) {\n      const urlEndpoint = useCustom ? apiEndpoint : apiEndpoint();\n      const absoluteUrl = urlEndpoint + url;\n      debug('Attempting blob download of file:', absoluteUrl);\n      return apiLib(_objectSpread({}, defaultOptions, {\n        method: GET,\n        url: absoluteUrl,\n        params,\n        headers: {// any custom headers go here\n        },\n        responseType: 'blob' // this is what makes it go in download mode\n\n      }));\n    }\n\n  });\n}\nexport const customApiCaller = apiClient(axios)(true);\n\nconst computeApiEndpoint = () => {\n  if (config.USE_CUSTOM_API_ENDPOINT) {\n    return config.API_ENDPOINT;\n  }\n\n  return getHostName(isServer)();\n};\n\nconst api = apiClient(axios)(false)(computeApiEndpoint);\nexport default api;","map":{"version":3,"sources":["/Users/brickbolt/React/bricknbolt/updated/foundation-react-ui/src/js/common/utils/apiClient.ts"],"names":["axios","Debug","getHostName","isServer","config","debug","GET","POST","DELETE","PUT","apiClient","apiLib","defaultOptions","method","url","params","data","useCustom","apiEndpoint","get","urlEndpoint","absoluteUrl","headers","delete","xsrfCookieName","xsrfHeaderName","put","post","multiPart","blob","responseType","customApiCaller","computeApiEndpoint","USE_CUSTOM_API_ENDPOINT","API_ENDPOINT","api"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport axios, { AxiosPromise } from 'axios';\n\nimport Debug from 'debug';\nimport { getHostName, isServer } from './server';\nimport config from '../../../../config/config';\n\n// eslint-disable-next-line no-underscore-dangle\nconst debug = Debug('fr-ui:api');\n\nconst GET = 'get';\nconst POST = 'post';\nconst DELETE = 'delete';\nconst PUT = 'put';\n\n\nexport function apiClient(apiLib): any {\n    const defaultOptions = {\n        method: GET,\n        url: '',\n        params: {},\n        data: null,\n    };\n\n    return (useCustom: boolean) => (apiEndpoint: string | any): any => ({\n        get(url: string, params = {}): Promise<AxiosPromise> {\n            const urlEndpoint = useCustom ? apiEndpoint : apiEndpoint();\n            const absoluteUrl = urlEndpoint + url;\n            debug('GET request to url: ', absoluteUrl);\n\n            return apiLib({\n                ...defaultOptions,\n                method: GET,\n                url: absoluteUrl,\n                params,\n                headers: {\n                    // any custom headers go here\n                },\n            });\n        },\n        delete(url: string, params = {}): Promise<AxiosPromise> {\n            const urlEndpoint = useCustom ? apiEndpoint : apiEndpoint();\n            const absoluteUrl = urlEndpoint + url;\n            debug('DELETE request to url: ', absoluteUrl);\n\n            return apiLib({\n                ...defaultOptions,\n                method: DELETE,\n                url: absoluteUrl,\n                params,\n                headers: {\n                    // any custom headers go here\n                },\n                xsrfCookieName: 'add csrf cookie name here',\n                xsrfHeaderName: 'add csrf header name',\n            });\n        },\n        put(url: string, params = {}, data = {}): Promise<AxiosPromise> {\n            const urlEndpoint = useCustom ? apiEndpoint : apiEndpoint();\n            const absoluteUrl = urlEndpoint + url;\n\n            return apiLib({\n                ...defaultOptions,\n                method: PUT,\n                url: absoluteUrl,\n                params,\n                data,\n                headers: {\n                    // any custom headers go here\n                },\n                xsrfCookieName: 'add csrf cookie name here',\n                xsrfHeaderName: 'add csrf header name',\n            });\n        },\n        post(url: string, params = {}, data = {}): Promise<AxiosPromise> {\n            const urlEndpoint = useCustom ? apiEndpoint : apiEndpoint();\n            const absoluteUrl = urlEndpoint + url;\n            debug('POST request to url:', absoluteUrl);\n\n            return apiLib({\n                ...defaultOptions,\n                method: POST,\n                url: absoluteUrl,\n                params,\n                data,\n                headers: {\n                    // any custom headers go here\n                },\n                xsrfCookieName: 'add csrf cookie name here',\n                xsrfHeaderName: 'add csrf header name',\n            });\n        },\n        multiPart(url: string, params = {}, data = {}): Promise<AxiosPromise> {\n            const urlEndpoint = useCustom ? apiEndpoint : apiEndpoint();\n            const absoluteUrl = urlEndpoint + url;\n            debug('Attempting multi-part request to url:', absoluteUrl);\n\n            return apiLib({\n                ...defaultOptions,\n                method: POST,\n                url: absoluteUrl,\n                params,\n                data,\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n                xsrfCookieName: 'add csrf cookie name here',\n                xsrfHeaderName: 'add csrf header name',\n            });\n        },\n        blob(url: string, params = {}): Promise<AxiosPromise> {\n            const urlEndpoint = useCustom ? apiEndpoint : apiEndpoint();\n            const absoluteUrl = urlEndpoint + url;\n            debug('Attempting blob download of file:', absoluteUrl);\n\n            return apiLib({\n                ...defaultOptions,\n                method: GET,\n                url: absoluteUrl,\n                params,\n                headers: {\n                    // any custom headers go here\n                },\n                responseType: 'blob', // this is what makes it go in download mode\n            });\n        },\n    });\n}\n\nexport const customApiCaller = apiClient(axios)(true);\n\nconst computeApiEndpoint = (): string => {\n    if (config.USE_CUSTOM_API_ENDPOINT) {\n        return config.API_ENDPOINT;\n    }\n    return getHostName(isServer)();\n};\n\nconst api = apiClient(axios)(false)(computeApiEndpoint);\n\nexport default api;\n"]},"metadata":{},"sourceType":"module"}