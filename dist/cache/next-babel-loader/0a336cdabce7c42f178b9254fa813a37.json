{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-explicit-any */\nimport config from '../../../../config/config';\nexport const isServer = !(false && window.document && window.document.createElement);\nexport const getHostName = onServer => () => {\n  const defaultHost = '';\n\n  if (onServer) {\n    return config.HOSTNAME || defaultHost;\n  }\n\n  return `${window.location.protocol}//${window.location.hostname}`;\n};\nexport const withHostGetUrl = endpoint => {\n  if (config.USE_CUSTOM_API_ENDPOINT) return config.API_ENDPOINT;\n  const hostName = getHostName(isServer)();\n  return `${hostName}${endpoint}`;\n};\nexport const getOtherAppHost = appDomain => {\n  if (config.IS_DEV_ENV) return 'http://localhost:4000'; // Assuming that the proxy server is running on 4000 port\n\n  return getHostName(isServer)().replace('projects', appDomain);\n};","map":{"version":3,"sources":["/Users/brickbolt/React/bricknbolt/updated/foundation-react-ui/src/js/common/utils/server.ts"],"names":["config","isServer","window","document","createElement","getHostName","onServer","defaultHost","HOSTNAME","location","protocol","hostname","withHostGetUrl","endpoint","USE_CUSTOM_API_ENDPOINT","API_ENDPOINT","hostName","getOtherAppHost","appDomain","IS_DEV_ENV","replace"],"mappings":"AAAA;AACA,OAAOA,MAAP,MAAmB,2BAAnB;AAEA,OAAO,MAAMC,QAAQ,GAAG,EAAG,SAAiCC,MAAM,CAACC,QAAxC,IAAoDD,MAAM,CAACC,QAAP,CAAgBC,aAAvE,CAAjB;AAEP,OAAO,MAAMC,WAAW,GAAIC,QAAD,IAA4B,MAAc;AACjE,QAAMC,WAAW,GAAG,EAApB;;AACA,MAAID,QAAJ,EAAc;AACV,WAAON,MAAM,CAACQ,QAAP,IAAmBD,WAA1B;AACH;;AAED,SAAQ,GAAEL,MAAM,CAACO,QAAP,CAAgBC,QAAS,KAAIR,MAAM,CAACO,QAAP,CAAgBE,QAAS,EAAhE;AACH,CAPM;AASP,OAAO,MAAMC,cAAc,GAAIC,QAAD,IAAsB;AAChD,MAAIb,MAAM,CAACc,uBAAX,EAAoC,OAAOd,MAAM,CAACe,YAAd;AACpC,QAAMC,QAAQ,GAAGX,WAAW,CAACJ,QAAD,CAAX,EAAjB;AACA,SAAQ,GAAEe,QAAS,GAAEH,QAAS,EAA9B;AACH,CAJM;AAMP,OAAO,MAAMI,eAAe,GAAIC,SAAD,IAAuB;AAClD,MAAIlB,MAAM,CAACmB,UAAX,EAAuB,OAAO,uBAAP,CAD2B,CACK;;AACvD,SAAOd,WAAW,CAACJ,QAAD,CAAX,GAAwBmB,OAAxB,CAAgC,UAAhC,EAA4CF,SAA5C,CAAP;AACH,CAHM","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport config from '../../../../config/config';\n\nexport const isServer = !((typeof window !== 'undefined' && window.document && window.document.createElement));\n\nexport const getHostName = (onServer: boolean): any => (): string => {\n    const defaultHost = '';\n    if (onServer) {\n        return config.HOSTNAME || defaultHost;\n    }\n\n    return `${window.location.protocol}//${window.location.hostname}`;\n};\n\nexport const withHostGetUrl = (endpoint): string => {\n    if (config.USE_CUSTOM_API_ENDPOINT) return config.API_ENDPOINT;\n    const hostName = getHostName(isServer)();\n    return `${hostName}${endpoint}`;\n};\n\nexport const getOtherAppHost = (appDomain): string => {\n    if (config.IS_DEV_ENV) return 'http://localhost:4000'; // Assuming that the proxy server is running on 4000 port\n    return getHostName(isServer)().replace('projects', appDomain);\n};\n"]},"metadata":{},"sourceType":"module"}